-- COUNT() 
-- it returns a count of things. If you pass it the name of a column, 
-- it will return the number of entries in that column.
SELECT COUNT(D)
FROM `table`
-- COUNT() is an example of an aggregate function, 
-- which takes many values and returns one. 
-- (Other examples of aggregate functions include SUM(), AVG(), MIN(), and MAX().)


-- GROUP BY takes the name of one or more columns, 
-- and treats all rows with the same value in that column as a 
-- single group when you apply aggregate functions like COUNT().
SELECT A, COUNT(D)
FROM `table`
GROUP BY A 


-- GROUP BY ... HAVING
-- HAVING is used in combination with GROUP BY to ignore groups 
-- that don't meet certain criteria.
SELECT A, COUNT(D)
FROM `table`
GROUP BY A 
HAVING COUNT(D)>1


from google.cloud import bigquery
--Create a "Client" object
client = bigquery.Client()
--Construct a reference to the "hacker_news" dataset
dataset_ref = client.dataset("hacker_news", project="bigquery-public-data")
--API request - fetch the dataset
dataset = client.get_dataset(dataset_ref)
--Construct a reference to the "full" table
table_ref = dataset_ref.table("full")
--API request - fetch the table
table = client.get_table(table_ref)
--Preview the first five lines of the table
client.list_rows(table, max_results=5).to_dataframe()

--Query to select comments that received more than 10 replies
query_popular = """
                SELECT parent, COUNT(id)
                FROM `bigquery-public-data.hacker_news.full`
                GROUP BY parent
                HAVING COUNT(id) > 10
                """

--Set up the query (cancel the query if it would use too much of 
--your quota, with the limit set to 10 GB)
safe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)
query_job = client.query(query_popular, job_config=safe_config)
--API request - run the query, and convert the results to a pandas DataFrame
popular_comments = query_job.to_dataframe()
--Print the first five rows of the DataFrame
popular_comments.head()

query_bad = """
            SELECT `by` AS author, parent, COUNT(id)
            FROM `bigquery-public-data.hacker_news.full`
            GROUP BY parent
            """